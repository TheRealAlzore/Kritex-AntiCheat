plugins {
    id 'java'
    id "xyz.jpenilla.run-paper" version "2.3.1"
}

group = 'ac.kritex'
version = '1.0'

repositories {
    mavenCentral()

    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    maven { url = 'https://repo.codemc.org/repository/maven-public/' }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://repo.dmulloy2.net/repository/public/' }
    maven { url = 'https://oss.sonatype.org/content/groups/public/' }
    maven { url = 'https://repo.md3.cf/releases/' }
}

dependencies {

    compileOnly "org.spigotmc:spigot-api:1.19.1-R0.1-SNAPSHOT"

    compileOnly "com.comphenix.protocol:ProtocolLib:5.3.0"

    compileOnly "org.projectlombok:lombok:latest.release"
    annotationProcessor "org.projectlombok:lombok:latest.release"

    compileOnly "org.jetbrains:annotations:latest.release"

    implementation "net.md-5:bungeecord-chat:1.20-R0.1-SNAPSHOT"

    implementation "org.apache.commons:commons-lang3:3.13.0"
    implementation "commons-io:commons-io:2.15.1"
}

tasks {
    runServer {
        minecraftVersion("1.19")
    }
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}